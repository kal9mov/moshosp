# Инструкция по исправлению модулей Go в проекте MosHosp

## Проблема
В проекте наблюдаются ошибки, связанные с несоответствием путей импорта с названием модуля:
- В файлах используются импорты вида `moshosp/backend/...`
- При этом модуль в go.mod называется либо `moshosp`, либо `moshosp/backend`
- Код также может содержать импорты вида `github.com/kalin/moshosp/backend/...`

## Решение

### Вариант 1: Привести импорты к названию модуля в go.mod
1. Сделать название модуля в `moshosp/backend/go.mod` равным `module github.com/kalin/moshosp/backend`
2. Запустить скрипт для исправления импортов:
   ```
   chmod +x .fixmodpath.sh
   ./.fixmodpath.sh
   ```
3. Обновить зависимости:
   ```
   cd moshosp/backend
   go mod tidy
   ```

### Вариант 2: Сделать локальный модуль для разработки
1. Сделать название модуля в `moshosp/backend/go.mod` равным `module moshosp/backend`
2. Создать файл `go.work` в корне проекта:
   ```
   go work init
   go work use ./backend
   ```
3. Запустить поиск и замену импортов на `moshosp/backend/...`:
   ```
   find . -type f -name "*.go" -exec sed -i 's|"github.com/kalin/moshosp/backend/|"moshosp/backend/|g' {} \;
   ```
4. Обновить зависимости:
   ```
   cd moshosp/backend
   go mod tidy
   ```

## Что предпочтительнее?
- Вариант 1 лучше для публикации проекта как открытого исходного кода или деплоя
- Вариант 2 удобнее для локальной разработки без необходимости настраивать путь GitHub

## Что сделано в проекте
В проекте исправлены основные модули:
1. `go.mod` в корне проекта установлен как `module github.com/kalin/moshosp`
2. `go.mod` в директории backend установлен как `module github.com/kalin/moshosp/backend`
3. Исправлены импорты в некоторых файлах

## Следующие шаги
1. Запустите скрипт `.fixmodpath.sh` для исправления всех оставшихся импортов
2. Выполните `go mod tidy` в директории backend
3. Проверьте, что ошибки компиляции устранены
4. Соберите и запустите проект 