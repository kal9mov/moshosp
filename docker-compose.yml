version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: moshosp-frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8080/api
      - REACT_APP_ENV=development
    depends_on:
      - backend
    networks:
      - moshosp-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: moshosp-backend
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - APP_ENV=production
      - APP_PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES=24h
      - LOG_LEVEL=info
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/app/logs
    networks:
      - moshosp-network

  mock-api:
    build:
      context: ./backend/mock-api
      dockerfile: Dockerfile
    container_name: moshosp_mock_api
    ports:
      - "8080:8080"
    volumes:
      - ./backend/mock-api:/app
      - /app/node_modules
    environment:
      - PORT=8080
    networks:
      - moshosp-network

  postgres:
    image: postgres:14-alpine
    container_name: moshosp-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - moshosp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: moshosp_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - moshosp-network

  adminer:
    image: adminer
    container_name: moshosp-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    depends_on:
      - postgres
    networks:
      - moshosp-network

volumes:
  postgres-data:
  redis_data:

networks:
  moshosp-network:
    driver: bridge 